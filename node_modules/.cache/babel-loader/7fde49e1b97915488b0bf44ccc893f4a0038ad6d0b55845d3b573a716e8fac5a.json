{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatBuffers = concatBuffers;\nexports.b64UrlToString = b64UrlToString;\nexports.bufferToString = bufferToString;\nexports.stringToBuffer = stringToBuffer;\nexports.stringToB64Url = stringToB64Url;\nexports.b64UrlToBuffer = b64UrlToBuffer;\nexports.bufferTob64 = bufferTob64;\nexports.bufferTob64Url = bufferTob64Url;\nexports.b64UrlEncode = b64UrlEncode;\nexports.b64UrlDecode = b64UrlDecode;\nconst B64js = require(\"base64-js\");\nfunction concatBuffers(buffers) {\n  let total_length = 0;\n  for (let i = 0; i < buffers.length; i++) {\n    total_length += buffers[i].byteLength;\n  }\n  let temp = new Uint8Array(total_length);\n  let offset = 0;\n  temp.set(new Uint8Array(buffers[0]), offset);\n  offset += buffers[0].byteLength;\n  for (let i = 1; i < buffers.length; i++) {\n    temp.set(new Uint8Array(buffers[i]), offset);\n    offset += buffers[i].byteLength;\n  }\n  return temp;\n}\nfunction b64UrlToString(b64UrlString) {\n  let buffer = b64UrlToBuffer(b64UrlString);\n  return bufferToString(buffer);\n}\nfunction bufferToString(buffer) {\n  return new TextDecoder(\"utf-8\", {\n    fatal: true\n  }).decode(buffer);\n}\nfunction stringToBuffer(string) {\n  return new TextEncoder().encode(string);\n}\nfunction stringToB64Url(string) {\n  return bufferTob64Url(stringToBuffer(string));\n}\nfunction b64UrlToBuffer(b64UrlString) {\n  return new Uint8Array(B64js.toByteArray(b64UrlDecode(b64UrlString)));\n}\nfunction bufferTob64(buffer) {\n  return B64js.fromByteArray(new Uint8Array(buffer));\n}\nfunction bufferTob64Url(buffer) {\n  return b64UrlEncode(bufferTob64(buffer));\n}\nfunction b64UrlEncode(b64UrlString) {\n  try {\n    return b64UrlString.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n  } catch (error) {\n    throw new Error(\"Failed to encode string\", {\n      cause: error\n    });\n  }\n}\nfunction b64UrlDecode(b64UrlString) {\n  try {\n    b64UrlString = b64UrlString.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n    let padding;\n    b64UrlString.length % 4 == 0 ? padding = 0 : padding = 4 - b64UrlString.length % 4;\n    return b64UrlString.concat(\"=\".repeat(padding));\n  } catch (error) {\n    throw new Error(\"Failed to decode string\", {\n      cause: error\n    });\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","concatBuffers","b64UrlToString","bufferToString","stringToBuffer","stringToB64Url","b64UrlToBuffer","bufferTob64","bufferTob64Url","b64UrlEncode","b64UrlDecode","B64js","require","buffers","total_length","i","length","byteLength","temp","Uint8Array","offset","set","b64UrlString","buffer","TextDecoder","fatal","decode","string","TextEncoder","encode","toByteArray","fromByteArray","replace","error","Error","cause","padding","concat","repeat"],"sources":["C:/Users/adwai/perma-learn/frontend/node_modules/arweave/web/lib/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatBuffers = concatBuffers;\nexports.b64UrlToString = b64UrlToString;\nexports.bufferToString = bufferToString;\nexports.stringToBuffer = stringToBuffer;\nexports.stringToB64Url = stringToB64Url;\nexports.b64UrlToBuffer = b64UrlToBuffer;\nexports.bufferTob64 = bufferTob64;\nexports.bufferTob64Url = bufferTob64Url;\nexports.b64UrlEncode = b64UrlEncode;\nexports.b64UrlDecode = b64UrlDecode;\nconst B64js = require(\"base64-js\");\nfunction concatBuffers(buffers) {\n    let total_length = 0;\n    for (let i = 0; i < buffers.length; i++) {\n        total_length += buffers[i].byteLength;\n    }\n    let temp = new Uint8Array(total_length);\n    let offset = 0;\n    temp.set(new Uint8Array(buffers[0]), offset);\n    offset += buffers[0].byteLength;\n    for (let i = 1; i < buffers.length; i++) {\n        temp.set(new Uint8Array(buffers[i]), offset);\n        offset += buffers[i].byteLength;\n    }\n    return temp;\n}\nfunction b64UrlToString(b64UrlString) {\n    let buffer = b64UrlToBuffer(b64UrlString);\n    return bufferToString(buffer);\n}\nfunction bufferToString(buffer) {\n    return new TextDecoder(\"utf-8\", { fatal: true }).decode(buffer);\n}\nfunction stringToBuffer(string) {\n    return new TextEncoder().encode(string);\n}\nfunction stringToB64Url(string) {\n    return bufferTob64Url(stringToBuffer(string));\n}\nfunction b64UrlToBuffer(b64UrlString) {\n    return new Uint8Array(B64js.toByteArray(b64UrlDecode(b64UrlString)));\n}\nfunction bufferTob64(buffer) {\n    return B64js.fromByteArray(new Uint8Array(buffer));\n}\nfunction bufferTob64Url(buffer) {\n    return b64UrlEncode(bufferTob64(buffer));\n}\nfunction b64UrlEncode(b64UrlString) {\n    try {\n        return b64UrlString\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n            .replace(/\\=/g, \"\");\n    }\n    catch (error) {\n        throw new Error(\"Failed to encode string\", { cause: error });\n    }\n}\nfunction b64UrlDecode(b64UrlString) {\n    try {\n        b64UrlString = b64UrlString.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n        let padding;\n        b64UrlString.length % 4 == 0\n            ? (padding = 0)\n            : (padding = 4 - (b64UrlString.length % 4));\n        return b64UrlString.concat(\"=\".repeat(padding));\n    }\n    catch (error) {\n        throw new Error(\"Failed to decode string\", { cause: error });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}