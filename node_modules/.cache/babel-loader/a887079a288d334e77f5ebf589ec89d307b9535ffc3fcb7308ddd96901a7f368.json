{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adwai\\\\perma-learn\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Arweave from \"arweave\";\nimport wallet from \"./arweave-keyfile.json\";\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arweave = Arweave.init({\n  host: \"localhost\",\n  port: 1984,\n  protocol: \"http\",\n  timeout: 20000,\n  logging: true\n});\nfunction App() {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [course, setCourse] = useState(\"\");\n  const [recommendation, setRecommendation] = useState(\"No recommendation yet\");\n\n  // Fetch existing records from Arlocal on load\n  useEffect(() => {\n    const loadRecords = async () => {\n      try {\n        console.log(\"Fetching existing records...\");\n        const txIds = await arweave.arql({\n          op: \"equals\",\n          expr1: \"App-Name\",\n          expr2: \"PermaLearn\"\n        });\n        const fetchedRecords = await Promise.all(txIds.map(async txId => {\n          const tx = await arweave.transactions.get(txId);\n          const data = JSON.parse(tx.get(\"data\", {\n            decode: true,\n            string: true\n          }));\n          return {\n            ...data,\n            txId\n          };\n        }));\n        setRecords(fetchedRecords);\n        console.log(\"Records loaded:\", fetchedRecords);\n      } catch (error) {\n        console.error(\"Error loading records:\", error);\n      }\n    };\n    loadRecords();\n  }, []);\n\n  // Recommendation logic\n  const mockAORecommend = () => {\n    if (records.length === 0) return \"No recommendation yet\";\n    const lastCourse = records[records.length - 1].name;\n    if (lastCourse.includes(\"HTML\")) return \"Try CSS Basics next!\";\n    if (lastCourse.includes(\"CSS\")) return \"Try JavaScript Basics next!\";\n    if (lastCourse.includes(\"JavaScript\")) return \"Try React Basics next!\";\n    if (lastCourse.includes(\"React\")) return \"Try Node.js Basics next!\";\n    return \"Keep exploring advanced topics!\";\n  };\n  useEffect(() => {\n    setRecommendation(mockAORecommend());\n  }, [records]);\n\n  // Add a new record to Arlocal\n  const addRecord = async () => {\n    if (!course.trim()) {\n      alert(\"Please enter a course name!\");\n      return;\n    }\n    const newRecord = {\n      name: course.trim(),\n      date: new Date().toLocaleString()\n    };\n    try {\n      console.log(\"Creating transaction...\");\n      const transaction = await arweave.createTransaction({\n        data: JSON.stringify(newRecord)\n      }, wallet);\n      transaction.addTag(\"App-Name\", \"PermaLearn\");\n      transaction.addTag(\"Content-Type\", \"application/json\");\n      console.log(\"Signing transaction...\");\n      await arweave.transactions.sign(transaction, wallet);\n      console.log(\"Posting transaction to Arlocal...\");\n      const response = await arweave.transactions.post(transaction);\n      console.log(\"Response from Arlocal:\", response.status, response.statusText);\n      if (response.status === 200) {\n        setRecords(prevRecords => [...prevRecords, {\n          ...newRecord,\n          txId: transaction.id\n        }]);\n        setCourse(\"\");\n        console.log(\"Record saved! Transaction ID:\", transaction.id);\n      } else {\n        alert(`Failed to save to Arweave. Status: ${response.status} (${response.statusText})`);\n      }\n    } catch (error) {\n      console.error(\"Error saving to Arweave:\", error);\n      alert(\"Something went wrong. Check the console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.header,\n      children: \"PermaLearn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: course,\n        onChange: e => setCourse(e.target.value),\n        placeholder: \"Enter course name\",\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRecord,\n        className: styles.button,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.recordsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.subHeader,\n        children: \"Your Learning Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), records.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.emptyText,\n        children: \"No records yet. Start learning!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.recordsList,\n        children: records.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.recordItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.recordName,\n            children: record.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.recordDate,\n              children: record.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), record.txId && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `http://localhost:1984/${record.txId}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: styles.txLink,\n              children: \"View Locally\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.recommendationsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.subHeader,\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.emptyText,\n        children: recommendation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GS8lxYHfObWE1ClINPDPUVXQCoI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Arweave","wallet","styles","jsxDEV","_jsxDEV","arweave","init","host","port","protocol","timeout","logging","App","_s","records","setRecords","course","setCourse","recommendation","setRecommendation","loadRecords","console","log","txIds","arql","op","expr1","expr2","fetchedRecords","Promise","all","map","txId","tx","transactions","get","data","JSON","parse","decode","string","error","mockAORecommend","length","lastCourse","name","includes","addRecord","trim","alert","newRecord","date","Date","toLocaleString","transaction","createTransaction","stringify","addTag","sign","response","post","status","statusText","prevRecords","id","className","app","children","header","fileName","_jsxFileName","lineNumber","columnNumber","formContainer","type","value","onChange","e","target","placeholder","input","onClick","button","recordsContainer","subHeader","emptyText","recordsList","record","index","recordItem","recordName","recordDate","href","rel","txLink","recommendationsContainer","_c","$RefreshReg$"],"sources":["C:/Users/adwai/perma-learn/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Arweave from \"arweave\";\nimport wallet from \"./arweave-keyfile.json\";\nimport styles from \"./App.module.css\";\n\nconst arweave = Arweave.init({\n  host: \"localhost\",\n  port: 1984,\n  protocol: \"http\",\n  timeout: 20000,\n  logging: true,\n});\n\nfunction App() {\n  const [records, setRecords] = useState([]);\n  const [course, setCourse] = useState(\"\");\n  const [recommendation, setRecommendation] = useState(\"No recommendation yet\");\n\n  // Fetch existing records from Arlocal on load\n  useEffect(() => {\n    const loadRecords = async () => {\n      try {\n        console.log(\"Fetching existing records...\");\n        const txIds = await arweave.arql({\n          op: \"equals\",\n          expr1: \"App-Name\",\n          expr2: \"PermaLearn\",\n        });\n        const fetchedRecords = await Promise.all(\n          txIds.map(async (txId) => {\n            const tx = await arweave.transactions.get(txId);\n            const data = JSON.parse(tx.get(\"data\", { decode: true, string: true }));\n            return { ...data, txId };\n          })\n        );\n        setRecords(fetchedRecords);\n        console.log(\"Records loaded:\", fetchedRecords);\n      } catch (error) {\n        console.error(\"Error loading records:\", error);\n      }\n    };\n    loadRecords();\n  }, []);\n\n  // Recommendation logic\n  const mockAORecommend = () => {\n    if (records.length === 0) return \"No recommendation yet\";\n    const lastCourse = records[records.length - 1].name;\n    if (lastCourse.includes(\"HTML\")) return \"Try CSS Basics next!\";\n    if (lastCourse.includes(\"CSS\")) return \"Try JavaScript Basics next!\";\n    if (lastCourse.includes(\"JavaScript\")) return \"Try React Basics next!\";\n    if (lastCourse.includes(\"React\")) return \"Try Node.js Basics next!\";\n    return \"Keep exploring advanced topics!\";\n  };\n\n  useEffect(() => {\n    setRecommendation(mockAORecommend());\n  }, [records]);\n\n  // Add a new record to Arlocal\n  const addRecord = async () => {\n    if (!course.trim()) {\n      alert(\"Please enter a course name!\");\n      return;\n    }\n\n    const newRecord = {\n      name: course.trim(),\n      date: new Date().toLocaleString(),\n    };\n\n    try {\n      console.log(\"Creating transaction...\");\n      const transaction = await arweave.createTransaction(\n        { data: JSON.stringify(newRecord) },\n        wallet\n      );\n      transaction.addTag(\"App-Name\", \"PermaLearn\");\n      transaction.addTag(\"Content-Type\", \"application/json\");\n\n      console.log(\"Signing transaction...\");\n      await arweave.transactions.sign(transaction, wallet);\n\n      console.log(\"Posting transaction to Arlocal...\");\n      const response = await arweave.transactions.post(transaction);\n\n      console.log(\"Response from Arlocal:\", response.status, response.statusText);\n      if (response.status === 200) {\n        setRecords((prevRecords) => [\n          ...prevRecords,\n          { ...newRecord, txId: transaction.id },\n        ]);\n        setCourse(\"\");\n        console.log(\"Record saved! Transaction ID:\", transaction.id);\n      } else {\n        alert(`Failed to save to Arweave. Status: ${response.status} (${response.statusText})`);\n      }\n    } catch (error) {\n      console.error(\"Error saving to Arweave:\", error);\n      alert(\"Something went wrong. Check the console for details.\");\n    }\n  };\n\n  return (\n    <div className={styles.app}>\n      <h1 className={styles.header}>PermaLearn</h1>\n      <div className={styles.formContainer}>\n        <input\n          type=\"text\"\n          value={course}\n          onChange={(e) => setCourse(e.target.value)}\n          placeholder=\"Enter course name\"\n          className={styles.input}\n        />\n        <button onClick={addRecord} className={styles.button}>\n          Add\n        </button>\n      </div>\n      <div className={styles.recordsContainer}>\n        <h2 className={styles.subHeader}>Your Learning Records</h2>\n        {records.length === 0 ? (\n          <p className={styles.emptyText}>No records yet. Start learning!</p>\n        ) : (\n          <ul className={styles.recordsList}>\n            {records.map((record, index) => (\n              <li key={index} className={styles.recordItem}>\n                <span className={styles.recordName}>{record.name}</span>\n                <div>\n                  <span className={styles.recordDate}>{record.date}</span>\n                  {record.txId && (\n                    <a\n                      href={`http://localhost:1984/${record.txId}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className={styles.txLink}\n                    >\n                      View Locally\n                    </a>\n                  )}\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <div className={styles.recommendationsContainer}>\n        <h2 className={styles.subHeader}>Recommendations</h2>\n        <p className={styles.emptyText}>{recommendation}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}