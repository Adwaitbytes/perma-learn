{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst error_1 = require(\"./lib/error\");\nrequire(\"arconnect\");\nclass Blocks {\n  api;\n  network;\n  static HASH_ENDPOINT = \"block/hash/\";\n  static HEIGHT_ENDPOINT = \"block/height/\";\n  constructor(api, network) {\n    this.api = api;\n    this.network = network;\n  }\n  /**\n   * Gets a block by its \"indep_hash\"\n   */\n  async get(indepHash) {\n    const response = await this.api.get(`${Blocks.HASH_ENDPOINT}${indepHash}`);\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      if (response.status === 404) {\n        throw new error_1.default(\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n      } else {\n        throw new Error(`Error while loading block data: ${response}`);\n      }\n    }\n  }\n  /**\n   * Gets a block by its \"height\"\n   */\n  async getByHeight(height) {\n    const response = await this.api.get(`${Blocks.HEIGHT_ENDPOINT}${height}`);\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      if (response.status === 404) {\n        throw new error_1.default(\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n      } else {\n        throw new Error(`Error while loading block data: ${response}`);\n      }\n    }\n  }\n  /**\n   * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n   */\n  async getCurrent() {\n    const {\n      current\n    } = await this.network.getInfo();\n    return await this.get(current);\n  }\n}\nexports.default = Blocks;","map":{"version":3,"names":["Object","defineProperty","exports","value","error_1","require","Blocks","api","network","HASH_ENDPOINT","HEIGHT_ENDPOINT","constructor","get","indepHash","response","status","data","default","Error","getByHeight","height","getCurrent","current","getInfo"],"sources":["C:/Users/adwai/perma-learn/frontend/node_modules/arweave/web/blocks.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"./lib/error\");\nrequire(\"arconnect\");\nclass Blocks {\n    api;\n    network;\n    static HASH_ENDPOINT = \"block/hash/\";\n    static HEIGHT_ENDPOINT = \"block/height/\";\n    constructor(api, network) {\n        this.api = api;\n        this.network = network;\n    }\n    /**\n     * Gets a block by its \"indep_hash\"\n     */\n    async get(indepHash) {\n        const response = await this.api.get(`${Blocks.HASH_ENDPOINT}${indepHash}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new error_1.default(\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets a block by its \"height\"\n     */\n    async getByHeight(height) {\n        const response = await this.api.get(`${Blocks.HEIGHT_ENDPOINT}${height}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new error_1.default(\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n     */\n    async getCurrent() {\n        const { current } = await this.network.getInfo();\n        return await this.get(current);\n    }\n}\nexports.default = Blocks;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtCA,OAAO,CAAC,WAAW,CAAC;AACpB,MAAMC,MAAM,CAAC;EACTC,GAAG;EACHC,OAAO;EACP,OAAOC,aAAa,GAAG,aAAa;EACpC,OAAOC,eAAe,GAAG,eAAe;EACxCC,WAAWA,CAACJ,GAAG,EAAEC,OAAO,EAAE;IACtB,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EACA;AACJ;AACA;EACI,MAAMI,GAAGA,CAACC,SAAS,EAAE;IACjB,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACP,GAAG,CAACK,GAAG,CAAC,GAAGN,MAAM,CAACG,aAAa,GAAGI,SAAS,EAAE,CAAC;IAC1E,IAAIC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB,OAAOD,QAAQ,CAACE,IAAI;IACxB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzB,MAAM,IAAIX,OAAO,CAACa,OAAO,CAAC,iBAAiB,CAAC,sCAAsC,CAAC;MACvF,CAAC,MACI;QACD,MAAM,IAAIC,KAAK,CAAC,mCAAmCJ,QAAQ,EAAE,CAAC;MAClE;IACJ;EACJ;EACA;AACJ;AACA;EACI,MAAMK,WAAWA,CAACC,MAAM,EAAE;IACtB,MAAMN,QAAQ,GAAG,MAAM,IAAI,CAACP,GAAG,CAACK,GAAG,CAAC,GAAGN,MAAM,CAACI,eAAe,GAAGU,MAAM,EAAE,CAAC;IACzE,IAAIN,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB,OAAOD,QAAQ,CAACE,IAAI;IACxB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzB,MAAM,IAAIX,OAAO,CAACa,OAAO,CAAC,iBAAiB,CAAC,sCAAsC,CAAC;MACvF,CAAC,MACI;QACD,MAAM,IAAIC,KAAK,CAAC,mCAAmCJ,QAAQ,EAAE,CAAC;MAClE;IACJ;EACJ;EACA;AACJ;AACA;EACI,MAAMO,UAAUA,CAAA,EAAG;IACf,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAM,IAAI,CAACd,OAAO,CAACe,OAAO,CAAC,CAAC;IAChD,OAAO,MAAM,IAAI,CAACX,GAAG,CAACU,OAAO,CAAC;EAClC;AACJ;AACApB,OAAO,CAACe,OAAO,GAAGX,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}