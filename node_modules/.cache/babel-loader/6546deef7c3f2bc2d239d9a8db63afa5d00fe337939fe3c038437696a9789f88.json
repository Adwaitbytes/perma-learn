{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SiloResource = void 0;\nconst ArweaveUtils = require(\"./lib/utils\");\nclass Silo {\n  api;\n  crypto;\n  transactions;\n  constructor(api, crypto, transactions) {\n    this.api = api;\n    this.crypto = crypto;\n    this.transactions = transactions;\n  }\n  async get(siloURI) {\n    if (!siloURI) {\n      throw new Error(`No Silo URI specified`);\n    }\n    const resource = await this.parseUri(siloURI);\n    const ids = await this.transactions.search(\"Silo-Name\", resource.getAccessKey());\n    if (ids.length == 0) {\n      throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n    }\n    const transaction = await this.transactions.get(ids[0]);\n    if (!transaction) {\n      throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n    }\n    const encrypted = transaction.get(\"data\", {\n      decode: true,\n      string: false\n    });\n    return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n  }\n  async readTransactionData(transaction, siloURI) {\n    if (!siloURI) {\n      throw new Error(`No Silo URI specified`);\n    }\n    const resource = await this.parseUri(siloURI);\n    const encrypted = transaction.get(\"data\", {\n      decode: true,\n      string: false\n    });\n    return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n  }\n  async parseUri(siloURI) {\n    const parsed = siloURI.match(/^([a-z0-9-_]+)\\.([0-9]+)/i);\n    if (!parsed) {\n      throw new Error(`Invalid Silo name, must be a name in the format of [a-z0-9]+.[0-9]+, e.g. 'bubble.7'`);\n    }\n    const siloName = parsed[1];\n    const hashIterations = Math.pow(2, parseInt(parsed[2]));\n    const digest = await this.hash(ArweaveUtils.stringToBuffer(siloName), hashIterations);\n    const accessKey = ArweaveUtils.bufferTob64(digest.slice(0, 15));\n    const encryptionkey = await this.hash(digest.slice(16, 31), 1);\n    return new SiloResource(siloURI, accessKey, encryptionkey);\n  }\n  async hash(input, iterations) {\n    let digest = await this.crypto.hash(input);\n    for (let count = 0; count < iterations - 1; count++) {\n      digest = await this.crypto.hash(digest);\n    }\n    return digest;\n  }\n}\nexports.default = Silo;\nclass SiloResource {\n  uri;\n  accessKey;\n  encryptionKey;\n  constructor(uri, accessKey, encryptionKey) {\n    this.uri = uri;\n    this.accessKey = accessKey;\n    this.encryptionKey = encryptionKey;\n  }\n  getUri() {\n    return this.uri;\n  }\n  getAccessKey() {\n    return this.accessKey;\n  }\n  getEncryptionKey() {\n    return this.encryptionKey;\n  }\n}\nexports.SiloResource = SiloResource;","map":{"version":3,"names":["Object","defineProperty","exports","value","SiloResource","ArweaveUtils","require","Silo","api","crypto","transactions","constructor","get","siloURI","Error","resource","parseUri","ids","search","getAccessKey","length","transaction","encrypted","decode","string","decrypt","getEncryptionKey","readTransactionData","parsed","match","siloName","hashIterations","Math","pow","parseInt","digest","hash","stringToBuffer","accessKey","bufferTob64","slice","encryptionkey","input","iterations","count","default","uri","encryptionKey","getUri"],"sources":["C:/Users/adwai/perma-learn/frontend/node_modules/arweave/web/silo.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SiloResource = void 0;\nconst ArweaveUtils = require(\"./lib/utils\");\nclass Silo {\n    api;\n    crypto;\n    transactions;\n    constructor(api, crypto, transactions) {\n        this.api = api;\n        this.crypto = crypto;\n        this.transactions = transactions;\n    }\n    async get(siloURI) {\n        if (!siloURI) {\n            throw new Error(`No Silo URI specified`);\n        }\n        const resource = await this.parseUri(siloURI);\n        const ids = await this.transactions.search(\"Silo-Name\", resource.getAccessKey());\n        if (ids.length == 0) {\n            throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n        }\n        const transaction = await this.transactions.get(ids[0]);\n        if (!transaction) {\n            throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n        }\n        const encrypted = transaction.get(\"data\", { decode: true, string: false });\n        return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n    }\n    async readTransactionData(transaction, siloURI) {\n        if (!siloURI) {\n            throw new Error(`No Silo URI specified`);\n        }\n        const resource = await this.parseUri(siloURI);\n        const encrypted = transaction.get(\"data\", { decode: true, string: false });\n        return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n    }\n    async parseUri(siloURI) {\n        const parsed = siloURI.match(/^([a-z0-9-_]+)\\.([0-9]+)/i);\n        if (!parsed) {\n            throw new Error(`Invalid Silo name, must be a name in the format of [a-z0-9]+.[0-9]+, e.g. 'bubble.7'`);\n        }\n        const siloName = parsed[1];\n        const hashIterations = Math.pow(2, parseInt(parsed[2]));\n        const digest = await this.hash(ArweaveUtils.stringToBuffer(siloName), hashIterations);\n        const accessKey = ArweaveUtils.bufferTob64(digest.slice(0, 15));\n        const encryptionkey = await this.hash(digest.slice(16, 31), 1);\n        return new SiloResource(siloURI, accessKey, encryptionkey);\n    }\n    async hash(input, iterations) {\n        let digest = await this.crypto.hash(input);\n        for (let count = 0; count < iterations - 1; count++) {\n            digest = await this.crypto.hash(digest);\n        }\n        return digest;\n    }\n}\nexports.default = Silo;\nclass SiloResource {\n    uri;\n    accessKey;\n    encryptionKey;\n    constructor(uri, accessKey, encryptionKey) {\n        this.uri = uri;\n        this.accessKey = accessKey;\n        this.encryptionKey = encryptionKey;\n    }\n    getUri() {\n        return this.uri;\n    }\n    getAccessKey() {\n        return this.accessKey;\n    }\n    getEncryptionKey() {\n        return this.encryptionKey;\n    }\n}\nexports.SiloResource = SiloResource;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}